=========================================================== C Format Specifiers

Format specifiers are used together with the printf() or scanf() function to tell the what type of data the variable is storing. It is basically a placeholder for the variable value.

A format specifier starts with a percentage sign %, followed by a character.

For example, to output the value of an int variable, use the format specifier %d surrounded by double quotes (""), inside the printf() function:


Example:

int myNum = 15;
printf ("%d", myNum); // Outputs 15

To print other types, use %c for char and %f for float:

Example:

//Create variables
int myNum = 15;			//Integer (whole number)
float myFloatNum = 5.99;	//Floating point number
char myLetter = 'D';		//Character

//Print variables
printf("%d\n", myNum);
printf("%f\n", myFloatNum);
printf("%c\n", myLetter);

----- To combine both text and variable, separete them with a comma inside the printf() function:

Example:

int myNum = 15;
printf("My favorite number is: %d", myNum);


-----To print different types in a single printf() function, you an use the following example:

int myNum = 15;
char myLetter = 'D';
printf("My number is %d any my leter is %c", myNum, myLetter);

-----Print Values Without Variables

You can also just print a vlue without storing it in a variable, as long as you use the correct format specifier:

printf("My favorite number is: %d", 15);
printf("My favorite number is: %c", 'D');

***However, it is more sustainable to use variables as they are saved for later and can be re-used whenever.



=========================================================== C Variable Values

=====Change Variable Values


If you assign a new value to an existing variable, it will overwrite the previous value:

-----

Example:

int myNum = 15;		//mynum is 15
myNum = 10;		//Now myNum is 10

-----

You can also assign the value of one variable to another:


_________________________________________________________
|							|
| Example:						|
|							|
| int myNum = 15;					|
|							|
| int myOtherNum = 23;					|
|							|
| //Assign the value of myOtherNum (23) to myNum	|
| myNum = myOtherNum;					|
|							|
| //myNum is now 23, instead of 15			|
| prinf("%d", myNum);					|
|							|
---------------------------------------------------------

Or copy values to empty variables:

Example:

//Create a variable and assign the value 5 to ot
int myNum = 15;

//Declare a variable without assigning it a value
int myOtherNum;

//Assign the value of myNum to myOtherNum
myOtherNum = myNum;

//myOtherNum nos has 15 as a value
printf("%d", myOtherNum);

-----Add variables Together

To add a variable to another variable, you can use the + operator:

Example:

int x = 5;
int y = 6;
int sum = x + y;
printf("%d", sum);